name: List Projects

on:
  workflow_dispatch:

jobs:
  list_projects:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
    steps:
    - name: List Projects
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          console.log("Repository:", context.repo.owner + "/" + context.repo.repo);
          
          // Query for repository projects (old style)
          const repoProjectsQuery = `query($owner:String!, $name:String!) {
            repository(owner:$owner, name:$name) {
              projects(first: 20) {
                nodes {
                  id
                  name
                }
              }
            }
          }`;

          const repoProjectsData = await github.graphql(repoProjectsQuery, {
            owner: context.repo.owner,
            name: context.repo.repo
          });

          console.log("Repository Projects (old style):", JSON.stringify(repoProjectsData.repository.projects.nodes, null, 2));

          // Query for repository projects (new style)
          const repoProjectsV2Query = `query($owner:String!, $name:String!) {
            repository(owner:$owner, name:$name) {
              projectsV2(first: 20) {
                nodes {
                  id
                  title
                  number
                }
              }
            }
          }`;

          const repoProjectsV2Data = await github.graphql(repoProjectsV2Query, {
            owner: context.repo.owner,
            name: context.repo.repo
          });

          console.log("Repository Projects (new style):", JSON.stringify(repoProjectsV2Data.repository.projectsV2.nodes, null, 2));

          // Query for organization projects
          const orgProjectsQuery = `query($owner:String!) {
            organization(login: $owner) {
              projectsV2(first: 20) {
                nodes {
                  id
                  title
                  number
                }
              }
            }
          }`;

          try {
            const orgProjectsData = await github.graphql(orgProjectsQuery, {
              owner: context.repo.owner
            });

            console.log("Organization Projects:", JSON.stringify(orgProjectsData.organization.projectsV2.nodes, null, 2));
          } catch (error) {
            console.log("Error querying organization projects:", error.message);
          }
